name: Build & Upload release

on:
  push:
    branches: [ "staging" ]

  workflow_dispatch:
    inputs:
        logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
        tags:
          description: 'Test scenario tags'  

# Tests have been split into various categories to reduce runtime and ensure rough 15-20min to complete all tests
jobs:
  build-publish:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [16.14.0]
    env:
      EXTENSION_ID: olgmmbfdmfbnihhcfhalglddbjobgpli
    steps:
      - name: "Checkout this repo"
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: "Setup .env"
        run: |
          cd chrome-extension
          touch .env
          echo 'REACT_APP_SUPPORTED_NETWORKS=80001' >> .env
          echo 'REACT_APP_DEFAULT_NETWORK=80001' >> .env
          echo 'REACT_APP_WEB3_STORAGE_KEY=${{secrets.REACT_APP_WEB3_STORAGE_KEY}}' >> .env
          echo 'REACT_APP_THEGRAPH_URL=https://api.thegraph.com/subgraphs/name/venkatteja/vigilancedao' >> .env

      - name: "Install node_modules"
        run: |
          cd chrome-extension
          npm install

      - name: "Create release build"
        run: |
          cd chrome-extension
          npm run release  
          zip -r chrome-extension-${{ github.event.pull_request.head.sha }}.zip build

      - name: Install webstore cli
        run: |-
          npm install -g chrome-webstore-upload-cli

      - name: Upload step
        run: |-
          chrome-webstore-upload upload \\
            --source chrome-extension-${{ github.event.pull_request.head.sha }}.zip \\
            --extension-id ${{ env.EXTENSION_ID }} \\
            --client-id ${{ secrets.CI_GOOGLE_CLIENT_ID }} \\
            --client-secret ${{ secrets.CI_GOOGLE_CLIENT_SECRET }} \\
            --refresh-token ${{ secrets.CI_GOOGLE_REFRESH_TOKEN }} \\
            --trusted-testers
      
      - name: Create Pre-Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true